name: CI
on:
  push:
    branches: ["**"]
  pull_request:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Export PYTHONPATH
        run: echo "PYTHONPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV

      # Προαιρετικά secrets (αν υπάρχουν)
      - name: Write GCP SA key (if present)
        shell: bash
        env:
          GCP_SA_JSON: ${{ secrets.GCP_SA_JSON }}
        run: |
          if [ -n "$GCP_SA_JSON" ]; then
            printf '%s' "$GCP_SA_JSON" > gcp-sa.json
            echo "GOOGLE_APPLICATION_CREDENTIALS=$PWD/gcp-sa.json" >> $GITHUB_ENV
          else
            echo "No GCP_SA_JSON secret set; skipping."
          fi

      - name: Write Streamlit secrets (if present)
        shell: bash
        env:
          STREAMLIT_SECRETS: ${{ secrets.STREAMLIT_SECRETS }}
        run: |
          if [ -n "$STREAMLIT_SECRETS" ]; then
            mkdir -p .streamlit
            printf '%s' "$STREAMLIT_SECRETS" > .streamlit/secrets.toml
          else
            echo "No STREAMLIT_SECRETS set; skipping."
          fi

      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          # Εγκατέστησε ΡΗΤΑ pytest & pytest-cov για να υπάρχουν πάντα
          pip install pytest pytest-cov
          python -c "import sys,pytest,importlib.util; print('pytest',pytest.__version__); print('pytest-cov present?', bool(importlib.util.find_spec('pytest_cov')))"

      - name: Pre-commit (black/ruff/mypy)
        uses: pre-commit/action@v3.0.1
        with:
          extra_args: --all-files --show-diff-on-failure

      - name: Tests (with coverage if plugin present)
        shell: bash
        run: |
          if python -c "import importlib.util,sys; sys.exit(0 if importlib.util.find_spec('pytest_cov') else 1)"; then
            echo "pytest-cov present → running with coverage"
            pytest -q --cov=. --cov-report=term-missing
          else
            echo "pytest-cov missing → running without coverage"
            pytest -q
          fi